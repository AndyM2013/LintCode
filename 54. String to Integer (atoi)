 /*
  *54. String to Integer (atoi)
    Implement function atoi to convert a string to an integer.

    If no valid conversion could be performed, a zero value is returned.

    If the correct value is out of the range of representable values, INT_MAX (2147483647) or INT_MIN (-2147483648) is returned.

    Example
    "10" => 10
    "-1" => -1
    "123123123123123" => 2147483647
    "1.0" => 1
  */
  
  
  public class Solution {
    /**
     * @param str: A string
     * @return: An integer
     */
    public int atoi(String str) {
        // write your code here
        str = str.trim();
        if (str == null || str.isEmpty()){
            return 0;
        }
        int start = 0;
        boolean isNegative = false;
        if (str.charAt(0) == '-'){
            isNegative = true;
            start++;
        }
        if (str.charAt(0) == '+'){
            start++;
        }
        int num = 0;
        for (int i = start; i < str.length(); i++){
            char ch = str.charAt(i);
            int digit = ch - '0';
            if (ch < '0' || ch > '9'){
                break;
            }
            if (!isNegative && positiveOverFlow(num, digit)){
                return Integer.MAX_VALUE;
            }
            if (isNegative && negativeOverFlow(num, digit)){
                return Integer.MIN_VALUE;
            }
            num = num * 10 + digit;
        }
        return isNegative? 0 - num: num;
    }
    
    public boolean positiveOverFlow(int number, int digit){
        int check = number * 10 + digit;
        return !(check % 10 == digit && check / 10 == number);
    }
    
    public boolean negativeOverFlow(int number, int digit){
        if (-number * 10 - digit == Integer.MIN_VALUE){
            return false;
        }
        return positiveOverFlow(number, digit);
    }
}
