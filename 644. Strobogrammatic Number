// 644. Strobogrammatic Number
// A mirror number is a number that looks the same 
// when rotated 180 degrees (looked at upside down).

// Write a function to determine if a number is mirror. 
// The number is represented as a string.

// Example
// For example, the numbers "69", "88", and "818" are all mirror numbers.
// Given num = "69" return true
// Given num = "68" return false

public class Solution {
    /**
     * @param num: a string
     * @return: true if a number is strobogrammatic or false
     */
    public boolean isStrobogrammatic(String num) {
        // write your code here
        HashMap<Character, Character>map = new HashMap<>();
        map.put('0' , '0');
        map.put('1' , '1');
        map.put('8' , '8');
        map.put('6' , '9');
        map.put('9' , '6');
        
        for(int i = 0; i < num.length(); i++){
            if(!map.containsKey(num.charAt(i))){
                return false;
            }else if(num.charAt(i) != map.get(num.charAt(num.length() - 1 - i))){
                return false;
            } 
        }
        return true;
    }
}
